//Проблема свободного места
//Темная ночь. Шумят волны, начинает капать дождь. Челкаш после очередного заплыва приплыл к контрабандистам, чтобы сбыть награбленный товар. Однако не все пошло по плану: выяснилось, что у контрабандистов на корабле уже фактически нет места. Задачу о рюкзаке контрабандисты не знают, и потому они требуют, чтобы Челкаш отдавал им товар в порядке неубывания веса. Челкаш уже очень устал и ничего не соображает, и потому эта задача кажется ему непосильной.
//
//К его счастью, в этот раз он приплыл не один, а вместе с Гаврилой. Но запуганный Гаврила сидит в углу лодки и еле может пошевелить руками, и потому отсортировать товар он также не может. Поэтому Челкаш решает поступить так: он выкладывает весь товар в ряд и q раз меняет какие-то два элемента ряда местами. После этого он бросается на Гаврилу и требует, что бы он сказал, является ряд отсортированным по неубыванию или нет. Как уже было сказано, Челкаш очень устал, и даже если в какой-то момент товар оказался отсортированным, Челкаш может продолжить задавать вопросы.
//
//В темноте Гаврила видит очень плохо, и потому он не может помочь своему товарищу. Но в то же время он понимает, что если он ошибется, то на следующий день, когда Челкаш узнает об ошибке, Гавриле несдобровать. Гаврила просит Вас помочь ему справиться со столь непростой задачей.
//
//Входные данные
//В первой строке входных данных дано два целых числа n и q — количество товара и запросов соответственно. Во второй строке дано n натуральных чисел, не превосходящих — веса товаров. Далее следуют q строк, каждая из которых содержит два различных целых числа a и b, означающих, что Челкаш поменял элементы ряда с позициями a и b местами.
//
//Выходные данные
//Выведите q строк, являющимися ответами на запросы Челкаша. Если после изменения позиций элементов ряд стал отсортированным по неубыванию, выведите "Sorted!". В противном случае выведите "Unsorted!". Кавычки выводить не нужно.
//
//Sample Input 1:
//5 4
//1 2 5 3 4
//3 4
//4 5
//1 5
//5 1
//
//Sample Output 1:
//Unsorted!
//Sorted!
//Unsorted!
//Sorted!
//
//Sample Input 2:
//2 3
//2 10
//1 2
//1 2
//1 2
//
//Sample Output 2:
//Unsorted!
//Sorted!
//Unsorted!

#include <vector>
#include <iostream>
#include <algorithm>

using namespace std;

int main()
{
    int n, q;
    cin >> n >> q;

    vector <int> v(n), w(n);
    for (int i = 0; i < n; ++i)
    {
        cin >> v[i];
        w[i] = v[i];
    }
    sort(w.begin(), w.end());

    int ans = 0;
    for (int i = 0; i < n; ++i)
        if (v[i] != w[i])
            ++ans;

    int a, b;
    while (q--)
    {
        cin >> a >> b;
        --a;
        --b;

        if (v[a] == w[a] && v[a] != w[b])
            ++ans;
        if (v[b] == w[b] && v[b] != w[a])
            ++ans;
        if (v[a] != w[a] && v[a] == w[b])
            --ans;
        if (v[b] != w[b] && v[b] == w[a])
            --ans;

        if (ans)
            cout << "Unsorted!";
        else
            cout << "Sorted!";

        cout << '\n';
        swap(v[a], v[b]);
    }
}